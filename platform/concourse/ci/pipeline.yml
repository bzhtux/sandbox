---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: ci-repo
  type: git
  source:
    uri: ((github.url)):((github.user))/((github.repo)).git
    branch: feat/run-local-ci
    private_key: ((github_key))
    paths:
    - platform
  icon: git

- name: ci-image
  type: docker-image
  source: 
    repository: bzhtux/pivotal
  icon: docker

- name: terraform
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: bzhtux-tf-state
      prefix: concourse/((cp))
      credentials: ((gcp.credentials))
  icon: docker

- name: gcp-creds
  type: gcs
  source:
      bucket: gcp-creds
      regexp: concourse-(.*).json
      json_key: ((gcp.credentials))
  icon: github-circle

jobs:
- name: terraform-plan
  plan:
  - in_parallel:
    - get: ci-repo
    - get: ci-image
    - get: gcp-creds
  - put: terraform
    params:
      env_name: ((cp))
      plan_only: true
      terraform_source: ci-repo/platform/concourse/terraform/((cp))
      vars:
        gcp_creds: ((gcp.credentials))
        ssh_pub_key: ((ssh.pub_key))
        ssh_user: ((ssh.user)) 

- name: terraform-apply
  plan:
    - get: ci-repo
    - get: ci-image
    - get: gcp-creds
    - get: terraform
      trigger: true
      passed: [terraform-plan]
    - put: terraform
      params:
        env_name: ((cp))
        plan_run: true
        terraform_source: ci-repo/platform/concourse/terraform/((cp))
        env:
          TF_LOG: DEBUG        
        vars:
          gcp_creds: ((gcp.credentials))   
          ssh_pub_key: ((ssh.pub_key)) 
          ssh_user: ((ssh.user)) 
   

- name: terraform-destroy
  plan:
    - get: ci-repo
    - get: terraform
      trigger: false
      passed: [terraform-apply]
    - put: terraform
      params:
        action: destroy
        env_name: ((cp))          
        terraform_source: ci-repo/platform/concourse/terraform/((cp))
        env:
          TF_LOG: DEBUG                  
        vars:
          gcp_creds: ((gcp.credentials))
          ssh_pub_key: ((ssh.pub_key))     
      get_params:
        action: destroy

- name: BOSH
  plan:
  - in_parallel:
    - get: ci-repo
    - get: ci-image
    - get: terraform
      trigger: true
      passed: [terraform-apply]
  - task: deploy
    image: ci-image
    file: "ci-repo/platform/concourse/ci/bosh.yml"
    params:
      SSH_PRIV_KEY: ((ssh.priv_key))
      SSH_USERNAME: ((ssh.user))
